<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--类路径下-->
    <properties resource="jdbc.properties"/>
    <!--settings 控制mybatis全局行为的-->
    <settings>
        <!--setting 设置mybatis输出日志（打印在控制台上）-->

        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!--定义别名-->
    <typeAliases>
        <!-- 一个类型，一个自定义别名
        type: 自定义类型的全限定名称
        alias:别名
        -->
        <!--        <typeAlias type="org.example.entity.Student" alias="student"></typeAlias>-->
        <!--
        name 是包名，为这个包中的所有类配置别名，类名就是别名【不区分大小写】
        -->
        <package name="org.example.entity"/>

    </typeAliases>
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"/>
    </plugins>
    <!--环境配置：数据库的连接信息
        default 和<environment>的id 一一对应，表示使用哪个配置信息(线上数据 或者 线下数据库)
        感觉懒到极致
    -->
    <environments default="development">
        <!-- 一个环境的配置 -->
        <environment id="development">
            <!--type:指定数据源的类型
                1) POOLED:使用连接池, mybatis会创建 PooledDatasource类
                2) unpooled:不使用连接池,在每次执行sq1语句,先创建连接,执行sq1,再关闭连接 mybatis会创建一个UnPooledDataSource,管理Connection对象的使用
                3) JNDI:java命名和目录服务(相当于windows注册表)
            -->
            <transactionManager type="JDBC"/>
            <!--
            dataSource:表示数据源，连接数据库的
                type:表示数据源的类型,POOLED表示使用连接池
            -->
            <dataSource type="POOLED">
                <!--type:指定数据源的类型
                1) POOLED:使用连接池, mybatis会创建 PooledDatasource类
                2) unpooled:不使用连接池,在每次执行sq1语句,先创建连接,执行sq1,再关闭连接 mybatis会创建一个UnPooledDataSource,管理Connection对象的使用
                3) JNDI:java命名和目录服务(相当于windows注册表)
                -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url"
                          value="jdbc:mysql://127.0.0.1:3306/mysqlStudy?rewriteBatchedStatements=true&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true"/>
                <property name="username" value="root"/>
                <property name="password" value="yyc123456"/>
            </dataSource>
        </environment>

    </environments>

    <!--指定sql映射文件的位置-->
    <mappers>
        <!--前提需要配置resource路径 类路径 target/classes-->
        <mapper resource="org/example/dao/StudentDao.xml"/>
        <mapper resource="org/example/dao/CityDao.xml"/>
    </mappers>
</configuration>